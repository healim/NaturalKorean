//
//  NaturalKoreanTests.swift
//  NaturalKoreanTests
//
//  Created by Won on 17/05/2017.
//  Copyright © 2017 Won. All rights reserved.
//

import XCTest
@testable import NaturalKorean

class NaturalKoreanTests: XCTestCase {
	func testExample() {

		XCTAssertTrue("개발자".isEndWithHangeul)
		XCTAssertTrue("English".isEndWithEnglish)
		XCTAssertTrue("010".isEndWithNumber)

		XCTAssertFalse("not number".isEndWithNumber)
		XCTAssertTrue("0".isNumberHasSupport)
		XCTAssertFalse("2".isNumberHasSupport)
		XCTAssertTrue("111".isEndWithOne)
		XCTAssertFalse("110".isEndWithOne)
		XCTAssertTrue("사람".isEndWithJongSung)
		XCTAssertTrue("힘".isEndWithJongSung)
		XCTAssertFalse("개발자".isEndWithJongSung)
		XCTAssertFalse("여자".isEndWithJongSung)
		XCTAssertTrue("개발".isEndWith_LEEUL)
		XCTAssertTrue("삭발".isEndWith_LEEUL)
		XCTAssertFalse("친구".isEndWith_LEEUL)
		XCTAssertFalse("사람".isEndWith_LEEUL)
		XCTAssertEqual("각".jongSungOfLastHangeul, "ㄱ")
		XCTAssertEqual("갂".jongSungOfLastHangeul, "ㄲ")
		XCTAssertEqual("갃".jongSungOfLastHangeul, "ㄳ")
		XCTAssertTrue("english".isEndWithEnglish)
		XCTAssertFalse("english 센세이".isEndWithEnglish)
		XCTAssertEqual("going".lastTwoCharString, "ng")
		XCTAssertEqual("create".lastTwoCharString, "te")
		XCTAssertEqual("".lastTwoCharString, "")
		XCTAssertTrue("girl".isEndWith_L)
		XCTAssertFalse("not".isEndWith_L)
		XCTAssertTrue("going".isEndWithEnglishHangeulSupport)
		XCTAssertFalse("second".isEndWithEnglishHangeulSupport)

		XCTAssertEqual(NaturalKorean.baseCode, 44032)
		XCTAssertEqual(NaturalKorean.choSungCode, 588)
		XCTAssertEqual(NaturalKorean.jungSungCode, 28)
		XCTAssertEqual(StringType.with(string: "아마존"), StringType.hangeul)
		XCTAssertEqual(StringType.with(string: "Amazon"), StringType.english)
		XCTAssertEqual(StringType.with(string: "920819"), StringType.number)
		XCTAssertEqual(StringType.with(string: "😂"), StringType.unknown)
		XCTAssertEqual(NaturalKorean.get_E_or_GA(word: "프로그래머"), "가")
		XCTAssertEqual(NaturalKorean.get_E_or_GA(word: "사람"), "이")
		XCTAssertEqual(NaturalKorean.get_E_or_GA(word: "😂"), "(이)가")
		XCTAssertEqual(NaturalKorean.get_E_or_GA(word: "프로그래머"), "가")
		XCTAssertEqual(NaturalKorean.get_E_or_GA(word: "사람"), "이")
		XCTAssertEqual(NaturalKorean.get_E_or_GA(word: "creator"), "가")
		XCTAssertEqual(NaturalKorean.get_E_or_GA(word: "god"), "이")
		XCTAssertEqual(NaturalKorean.get_E_or_GA(word: "good"), "이")
		XCTAssertEqual(NaturalKorean.get_E_or_GA(word: "010"), "이")
		XCTAssertEqual(NaturalKorean.get_E_or_GA(word: "015"), "가")
		XCTAssertEqual(NaturalKorean.get_EURO_or_RO(word: "011"), "로")
		XCTAssertEqual("사람".E_or_GA_only, "이")
		XCTAssertEqual("프로그래머".E_or_GA_only, "가")
		XCTAssertEqual("사람".E_or_GA, "사람이")
		XCTAssertEqual("프로그래머".E_or_GA, "프로그래머가")
		XCTAssertEqual("사람".EUN_or_NEUN, "사람은")
		XCTAssertEqual("프로그래머".EUN_or_NEUN, "프로그래머는")
		XCTAssertEqual("programmer".EUN_or_NEUN, "programmer는")
		XCTAssertEqual("110".EUN_or_NEUN, "110은")
		XCTAssertEqual("15".EUN_or_NEUN, "15는")
		XCTAssertEqual("⚔️".EUN_or_NEUN, "⚔️은")
		XCTAssertEqual("home".EUN_or_NEUN, "home은")
		XCTAssertEqual("사람".EUL_or_LEUL, "사람을")
		XCTAssertEqual("프로그래머".EUL_or_LEUL, "프로그래머를")
		XCTAssertEqual("home".EUL_or_LEUL, "home을")
		XCTAssertEqual("house".EUL_or_LEUL, "house를")
		XCTAssertEqual("2".EUL_or_LEUL, "2를")
		XCTAssertEqual("0".EUL_or_LEUL, "0을")
		XCTAssertEqual("😍".EUL_or_LEUL, "😍를")
		XCTAssertEqual("girl".EURO_or_RO, "girl로")
		XCTAssertEqual("0".EURO_or_RO, "0으로")
		XCTAssertEqual("😅".EURO_or_RO, "😅으로")
		XCTAssertEqual("girl".EURO_or_RO_only, "로")
		XCTAssertEqual("going".EURO_or_RO_only, "으로")
		XCTAssertEqual("맥북".EURO_or_RO, "맥북으로")
		XCTAssertEqual("낙찰".EURO_or_RO, "낙찰로")
		XCTAssertEqual("그녀".EURO_or_RO, "그녀로")
		XCTAssertEqual("이사람".A_or_YA, "이사람아")
		XCTAssertEqual("이여자".A_or_YA, "이여자야")
		XCTAssertEqual("girl".A_or_YA_only, "야")
		XCTAssertEqual("ing".A_or_YA_only, "아")
		XCTAssertEqual("0".A_or_YA_only, "아")
		XCTAssertEqual("2".A_or_YA_only, "야")
		XCTAssertEqual("⚔️".A_or_YA_only, "아")
		XCTAssertEqual("이사람".WA_or_GUA, "이사람과")
		XCTAssertEqual("이여자".WA_or_GUA, "이여자와")
		XCTAssertEqual("ing".WA_or_GUA_only, "과")
		XCTAssertEqual("gg".WA_or_GUA_only, "와")
		XCTAssertEqual("0".WA_or_GUA_only, "과")
		XCTAssertEqual("2".WA_or_GUA_only, "와")
		XCTAssertEqual("⚔️".WA_or_GUA_only, "와")
	}
}
